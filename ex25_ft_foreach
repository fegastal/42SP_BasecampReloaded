Crie a função ft_foreach que, para um determinado array de inteiros, aplica uma função em todos os elementos do array.
Esta função será aplicada seguindo a ordem do array.

Veja como a função deve ser prototipada:
void ft_foreach(int *tab, int length, void(*f)(int));

Por exemplo, a função ft_foreach pode ser chamada da seguinte forma para exibir todos os inteiros do array : ft_foreach(tab, 1337, &ft_putnbr);

_

#include <unistd.h> //Inclusão da biblioteca unistd, porque trabalharemos com write (putchar)

void print_number(int nb) //Chamar a função print_number, possuindo como parâmetro um número aleatório (nb) inteiro 
{
    char number; //Declaração de uma variável chamada "number", do tipo caractere

    if (nb / 10 > 0) //Se a divisão desse número aleatório por dez for maior que zero
    {
        print_number(nb / 10); //Fazer a impressão desse novo número após a operação
    }
    number = nb % 10 + '0'; //Se essa divisão obtiver um número negativo, o valor do número será igual ao módulo da divisão por dez + o caractere 0
    write(1, &number, 1); //Fazer a impressão do valor da variável "number"
}

void ft_putnbr(int nb) //Chamar a função put number, com parâmetro um número aleatório (nb) inteiro
{
    if (nb == -2147483648) //Se esse número aleatório for igual ao menor número negativo inteiro possível
    {
        write(1, "-2147483648", 11); //Escreva, portanto, este valor
        return; //Sair desse ciclo com return
    }
    if (nb < 0) //Se o número aleatório for negativo
    {
        write(1, "-", 1); //Escreva um sinal de negativo antes desse número já negativo
        nb *= -1; //E o valor desse número aleatório negativo virará positivo. Isso é um método de conversão de sinais em programação
    }
    print_number(nb); //Fazer a impressão, portanto, do resultado desse número caso ele seja positivo (não pertença às condições anteriores)
}

void ft_foreach(int *tab, int length, void (*f)(int)) //Chamar a função solicitada pelo exercício, a partir de seu protótipo
{
    int i; //Declaração da variável i, do tipo inteiro

    i = 0; //Considerando-se que ela começa em 0
    while (i < length) //Enquanto o valor da variável for menor que o comprimento do array em questão
    {
        f(tab[i]); //a variável i estará em função do parâmetro tab
        ++i; //Incrementar o valor da variável i
    }
}

int main() //Para testar, usamos essa função principal
{
    int array[5] = {1, 2, 3, 4, 5}; //Considerando-se um array composto por 5 números inteiros
    ft_foreach(array, 5, &ft_putnbr); //Usar a função realizada para aplicá-la em todos os elementos do array
}
