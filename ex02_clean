Num ficheiro chamado clean, a linha de comando irá procurar todos os ficheiros - no
diretório atual, bem como nos seus subdiretórios - com um nome que termina por ~, ou com
um nome que começa e termina por #

O comando para isso pode ser:

find . -type f \( -name "*~" -or -name "#*#" \) -print -delete

Ele fará as funções de acordo com o que foi pedido no enunciado.
Vamos analisar com mais propriedade:

Quando vamos no manual (man find), encontramos algumas informações:

_

     -type t
     
             "True" se o arquivo for do tipo especificado. Tipos de arquivo possíveis
             são como segue:

             b bloco especial
             c caractere especial
             diretório d
             f arquivo normal
             l link simbólico
             p FIFO
             s soquete  
             
Portanto, -type f é para especificar o tipo de um arquivo regular.

_

      -name
             "Verdadeiro" se o último componente do nome do caminho que está sendo examinado corresponder
             padronizar. Caracteres especiais de correspondência de padrões de shell (``['',
             ``]'', ``*'' e ``?'') podem ser usados ​​como parte do padrão. Esses
             caracteres podem ser correspondidos explicitamente escapando-os com um
             barra invertida (``\'').             
             
Para especificar quais caracteres eu desejo (detalhe em -or, porque pode ser um ou outro)

_

      -print
             Esse primário sempre é avaliado como verdadeiro. Ele imprime o nome do caminho de
             o arquivo atual para a saída padrão. Se nenhum de -exec, -ls,
             -print, -print0 ou -ok for especificado, a expressão fornecida deve
             ser efetivamente substituído por (expressão dada) -print.
             
_

-delete
             Exclui os arquivos e/ou diretórios encontrados. Sempre retorna verdadeiro.
             Isso é executado a partir do diretório de trabalho atual, pois find é recorrente
             para baixo da árvore. Ele não tentará excluir um nome de arquivo com um
             caractere ``/'' em seu nome de caminho relativo a ``.'' para segurança
             razões. O processamento transversal em profundidade está implícito neste
             opção. Os links simbólicos a seguir são incompatíveis com esta opção.
